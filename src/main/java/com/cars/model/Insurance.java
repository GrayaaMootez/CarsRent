package com.cars.model;
// Generated 6 juin 2018 18:04:52 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotEmpty;

/**
 * Insurance generated by hbm2java
 */
@Entity
@Table(name = "INSURANCE")
public class Insurance implements java.io.Serializable {

	@NotNull
	private Long insuranceId;
	@NotEmpty
	private String insType;
	private Set<Booking> bookings = new HashSet<Booking>(0);

	public Insurance() {
	}

	@Transient
	public boolean isNew() {
		return (this.getInsuranceId() == null);
	}

	public Insurance(Long insuranceId, String insType) {
		this.insuranceId = insuranceId;
		this.insType = insType;
	}

	public Insurance(Long insuranceId, String insType, Set<Booking> bookings) {
		this.insuranceId = insuranceId;
		this.insType = insType;
		this.bookings = bookings;
	}

	@Id

	@Column(name = "INSURANCE_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getInsuranceId() {
		return this.insuranceId;
	}

	public void setInsuranceId(Long insuranceId) {
		this.insuranceId = insuranceId;
	}

	@Column(name = "INS_TYPE", nullable = false, length = 30)
	public String getInsType() {
		return this.insType;
	}

	public void setInsType(String insType) {
		this.insType = insType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "insurance")
	public Set<Booking> getBookings() {
		return this.bookings;
	}

	public void setBookings(Set<Booking> bookings) {
		this.bookings = bookings;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((insType == null) ? 0 : insType.hashCode());
		result = prime * result + ((insuranceId == null) ? 0 : insuranceId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Insurance other = (Insurance) obj;
		if (insType == null) {
			if (other.insType != null) {
				return false;
			}
		} else if (!insType.equals(other.insType)) {
			return false;
		}
		if (insuranceId == null) {
			if (other.insuranceId != null) {
				return false;
			}
		} else if (!insuranceId.equals(other.insuranceId)) {
			return false;
		}
		return true;
	}

}
